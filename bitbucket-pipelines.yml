image: ubuntu:bionic

pipelines:
  default:
    - step:
        script:
          # Dependencies
          - apt update
          - apt -y install wget lsb-release gnupg
          - sh -c 'echo "deb http://packages.osrfoundation.org/gazebo/ubuntu-stable `lsb_release -cs` main" > /etc/apt/sources.list.d/gazebo-stable.list'
          - sh -c 'echo "deb http://packages.osrfoundation.org/gazebo/ubuntu-prerelease `lsb_release -cs` main" > /etc/apt/sources.list.d/gazebo-prerelease.list'
          - wget http://packages.osrfoundation.org/gazebo.key -O - | apt-key add -
          - apt update
          - apt -y install
            cmake pkg-config python cppcheck doxygen ruby-ronn
            git libcurl4-openssl-dev libjsoncpp-dev libzip-dev libgflags-dev libtinyxml2-dev
            lcov curl libyaml-dev
            libignition-cmake2-dev
            libignition-common4-dev
            libignition-math6-dev
            # libignition-msgs5-dev
          # Ignition tools
          - git clone http://github.com/ignitionrobotics/ign-tools -b master
          - cd ign-tools
          - mkdir build
          - cd build
          - cmake ..
          - make -j4 install
          - cd ../..
          # # Ignition msgs
          - apt-get -y install
            libprotobuf-dev protobuf-compiler libprotoc-dev libtinyxml2-dev
          - git clone http://github.com/ignitionrobotics/ign-msgs -b master
          - cd ign-msgs
          - mkdir build
          - cd build
          - cmake ..
          - make -j4 install
          - cd ../..
          # Make sure ign-tools can find installed libs
          - export LD_LIBRARY_PATH=/usr/local/lib/:$LD_LIBRARY_PATH
          # Ignition Fuel Tools
          - mkdir build && cd build
          - cmake .. -DCMAKE_BUILD_TYPE=coverage
          - make codecheck
          - make -j4
          - make install
          - make test ARGS="-VV"
          - make coverage
          - bash <(curl -s https://codecov.io/bash)
          # Build examples
          - cd ../example
          - mkdir build && cd build
          - cmake ..
          - make -j4
