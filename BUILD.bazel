load(
    "//ign_bazel:build_defs.bzl",
    "IGNITION_FEATURES",
    "IGNITION_ROOT",
    "IGNITION_VISIBILITY",
    "cmake_configure_file",
    "generate_include_header",
    "generate_yaml",
    "ign_config_header",
    "ign_export_header",
)

package(
    default_visibility = IGNITION_VISIBILITY,
    features = IGNITION_FEATURES,
)

licenses(["notice"])

exports_files(["LICENSE"])

PROJECT_NAME = "ignition-fuel-tools"

PROJECT_MAJOR = 6

PROJECT_MINOR = 0

PROJECT_PATCH = 0

IGN_DESIGNATION = "fuel-tools"

CMAKE_INSTALL_PREFIX = "/tmp"

CMAKE_INSTALL_DATAROOTDIR = "/tmp"

library_location = "/usr"

IGN_LIBRARY_PATH = "/usr"

# Generates config.hh based on the version numbers in CMake code.
ign_config_header(
    name = "config",
    src = "include/ignition/fuel_tools/config.hh.in",
    out = "include/ignition/fuel_tools/config.hh",
    cmakelists = ["CMakeLists.txt"],
    extra_defines = [
        "PROJECT_NAME_LOWER=ignition-fuel-tools",
        "CMAKE_INSTALL_PREFIX=./ign_fuel_tools/",
        "CMAKE_INSTALL_DATAROOTDIR=./ign_fuel_tools/",
    ],
    project_name = PROJECT_NAME,
    project_version = (PROJECT_MAJOR, PROJECT_MINOR, PROJECT_PATCH),
)

ign_export_header(
    name = "include/ignition/fuel_tools/Export.hh",
    export_base = "IGNITION_FUEL_TOOLS",
    lib_name = "ignition-fuel-tools",
    visibility = ["//visibility:private"],
)

public_headers_no_gen = glob([
    "include/ignition/fuel_tools/*.hh",
])

private_headers = [
    "src/ModelIterPrivate.hh",
    "src/ModelPrivate.hh",
    "src/WorldIterPrivate.hh",
]

sources = glob(
    ["src/*.cc"],
    exclude = [
        "src/*_TEST.cc",
        "src/ign.cc",
    ],
)

test_sources = glob(
    ["src/*_TEST.cc"],
    exclude = ["src/ign_*.cc"],
)

generate_include_header(
    name = "fuel_toolshh_genrule",
    out = "include/ignition/fuel_tools.hh",
    hdrs = public_headers_no_gen + [
        "include/ignition/fuel_tools/config.hh",
        "include/ignition/fuel_tools/Export.hh",
    ],
)

public_headers = public_headers_no_gen + [
    "include/ignition/fuel_tools/config.hh",
    "include/ignition/fuel_tools/Export.hh",
    "include/ignition/fuel_tools.hh",
]

cc_library(
    name = "ign_fuel_tools",
    srcs = sources + private_headers + public_headers,
    includes = ["include"],
    deps = [
        IGNITION_ROOT + "ign_common",
        IGNITION_ROOT + "ign_msgs",
        IGNITION_ROOT + "ign_bazel:utilities",
        "@curl",
        "@json",
        "@yaml",
        "@zip",
    ],
)

cc_binary(
    name = "libignition-fuel-tools.so",
    srcs = [
        "src/ign.cc",
        "src/ign.hh",
    ],
    includes = ["include"],
    linkshared = True,
    deps = [
        ":ign_fuel_tools",
    ],
)

[cc_test(
    name = src.replace("/", "_").replace(".cc", "").replace("src_", ""),
    srcs = [src] + private_headers,
    deps = [
        IGNITION_ROOT + "ign_common",
        IGNITION_ROOT + "ign_fuel_tools",
        IGNITION_ROOT + "ign_fuel_tools/test:test_utils",
        "@gtest",
        "@gtest//:gtest_main",
    ],
) for src in test_sources]

cmake_configure_file(
    name = "fuel.rb",
    src = "src/cmd/cmdfuel.rb.in",
    out = "cmdfuel.rb",
    cmakelists = ["CMakeLists.txt"],
    defines = [
        "library_location=libignition-fuel-tools.so",
        "PROJECT_VERSION_FULL=%d.%d.%d" % (PROJECT_MAJOR, PROJECT_MINOR, PROJECT_PATCH),  # noqa
        "IGN_LIBRARY_NAME=%s" % PROJECT_NAME,
    ],
)

CMDS = "    - fuel   : Manage simulation resources."

generate_yaml(
    name = "fuel",
    commands = CMDS,
    library_name = PROJECT_NAME,
    library_version = "%d.%d.%d" % (PROJECT_MAJOR, PROJECT_MINOR, PROJECT_PATCH),
    ruby_target = "fuel.rb",
)
